name: split-and-push

on:
  push:
    branches:
      - main

jobs:
  prepare-repositories:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: github-repositories
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: v1.1.9
          terraform_wrapper: false
      - id: akoi
        uses: int128/akoi-action@v2
      - uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GCP_SERVIEC_ACCOUNT_KEY }}
          export_default_credentials: true
      - name: Run terraform apply
        run: |
          github-comment exec -- terraform init -input=false
          tfcmt plan -- terraform plan -input=false -out tfplan.binary
          tfcmt apply -- terraform apply -input=false tfplan.binary
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}

  load-matrix:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.format-modules.outputs.result }}
    steps:
      - uses: actions/checkout@v2
      - id: get-modules
        run: |
          echo "::set-output name=modules::$(node github-repositories/get-modules.js)"
      - id: format-modules
        uses: actions/github-script@v4
        with:
          script: |
            const modules = ${{ toJSON(fromJSON(steps.get-modules.outputs.modules).modules) }}.split('\n');
            return modules;

  split-and-push:
    runs-on: ubuntu-latest
    needs: [prepare-repositories, load-matrix]
    strategy:
      matrix:
        module: ${{ fromJSON(needs.load-matrix.outputs.modules) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Check if version.txt is updated
        uses: getsentry/paths-filter@v2
        id: version-updated
        with:
          token: ${{ github.token }}
          filters: |
            version:
              - 'modules/${{ matrix.module }}/version.txt'
      - name: Split subtree
        run: |
          git subtree split --prefix=modules/${{ matrix.module }} -b git-subtree-split
          git checkout git-subtree-split
      - uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
          repository: yuya-takeyama/terraform-module-example-${{ matrix.module }}
          force: true
          branch: main
      - name: Push version tag
        uses: actions/github-script@v4
        if: ${{ steps.version-updated.outputs.version == 'true' }}
        with:
          github-token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
          script: |
            const readFileSync = require('fs').readFileSync;
            const execSync = require('child_process').execSync;
            const tag = readFileSync('version.txt').toString().trim();
            const sha1 = execSync('git rev-parse HEAD').toString().trim();
            const res = await github.request('POST /repos/yuya-takeyama/terraform-module-example-${{ matrix.module }}/releases', {
              tag_name: tag,
              target_commitish: sha1,
            });
